openapi: 3.0.3
info:
  title: Student Service API
  description: |
    This API provides access to student-related functionalities in the IS/STAG system.
    It allows for the management and retrieval of student data.
  version: 1.0.0
  contact:
    name: STAG Support
    email: stag@service.zcu.cz
    url: https://is-stag.zcu.cz/zakaznici/Support.html

servers:
  - url: /api/v1
    description: Student Service API through API Gateway

tags:
  - name: students
    description: Operations for managing students

paths:

  # TODO: add the roles to the description of the endpoints

  /students/{studentId}:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - students
      summary: Get student
      description: |
        Retrieve a student by their unique identifier.
        
        **Required Roles:** `AD`, `DE`, `PR`, `SR`, `SP`, `VY`, `VK`
      operationId: getStudentProfile
      parameters:
        - $ref: '#/components/parameters/AcceptLanguage'
        - $ref: '#/components/parameters/StudentId'
      responses:
        '200':
          description: Student details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '503':
          $ref: '#/components/responses/503ServiceUnavailable'
        'default':
          $ref: '#/components/responses/Default'

components:

  securitySchemes:

    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token issued by Keycloak

  parameters:

    AcceptLanguage:
      name: Accept-Language
      in: header
      description: Preferred language
      required: false
      schema:
        type: string
        enum:
          - cs
          - en
        default: cs

    StudentId:
      name: studentId
      in: path
      required: true
      description: The unique identifier of the student to retrieve.
      schema:
        $ref: '#/components/schemas/StudentId'

  schemas:

    StudentId:
      type: string
      title: Student ID
      nullable: false
      description: The unique alphanumeric identifier for a student.
      maxLength: 10
      example: K24B4302P

    PersonId:
      type: integer
      format: int32
      title: Person ID
      nullable: false
      description: Unique identifier of the person.
      example: 221264
      minimum: 1

    StudentResponse:
      type: object
      title: Student Response
      description: Response containing student details.
      additionalProperties: false
      nullable: false
      required:
        - studentId
        - personId
        - firstName
        - lastName
        - titles
        - gender
        - studyProgram
        - fieldOfStudy
      properties:
        studentId:
          $ref: '#/components/schemas/StudentId'
        personId:
          $ref: '#/components/schemas/PersonId'
        firstName:
          type: string
          nullable: false
          description: First name of the student.
          example: John
          maxLength: 100
        lastName:
          type: string
          nullable: false
          description: Last name of the student.
          example: Doe
          maxLength: 100
        titles:
          $ref: '#/components/schemas/Titles'
        gender:
          type: string
          nullable: false
          description: Gender of the student.
          example: male
          maxLength: 240
        studyProgram:
          $ref: '#/components/schemas/StudyProgram'
        fieldOfStudy:
          $ref: '#/components/schemas/FieldOfStudy'

    Titles:
      type: object
      title: Titles
      description: Academic titles associated with the student (prefix and suffix).
      additionalProperties: false
      nullable: false
      required:
        - prefix
        - suffix
      properties:
        prefix:
          $ref: '#/components/schemas/Title'
        suffix:
          $ref: '#/components/schemas/Title'

    Title:
      type: string
      nullable: true
      description: An academic title, such as 'Ing.' or 'Ph.D.'.
      example: Ing.
      maxLength: 240

    StudyProgram:
      type: object
      title: Study Program
      description: Object containing student's study program details.
      additionalProperties: false
      nullable: false
      required:
        - id
        - name
        - faculty
        - code
        - form
        - type
      properties:
        id:
          type: integer
          format: int32
          nullable: false
          description: Unique identifier of the study program.
          example: 1966
        name:
          type: string
          nullable: false
          description: Name of the study program.
          example: Ekonomická a regionální geografie
          maxLength: 200
        faculty:
          type: string
          nullable: false
          description: Faculty of the study program.
          example: FEK
          maxLength: 6
        code:
          type: string
          nullable: true
          description: Code of the study program.
          example: B0532A330036
          maxLength: 12
        form:
          type: string
          nullable: false
          description: Form of the study program.
          example: Prezenční
          maxLength: 240
        type:
          type: string
          nullable: false
          description: Type of the study program.
          example: Bakalářský
          maxLength: 240

    FieldOfStudy:
      type: object
      title: Field Of Study
      description: Object containing student's field of study details.
      additionalProperties: false
      nullable: false
      required:
        - id
        - name
        - faculty
        - department
        - code
      properties:
        id:
          type: integer
          format: int32
          nullable: false
          description: Unique identifier of the field of study.
          example: 4343
        name:
          type: string
          nullable: false
          description: Name of the field of study.
          example: Ekonomická a regionální geografie
          maxLength: 200
        faculty:
          type: string
          nullable: false
          description: Faculty of the field of study.
          example: FEK
          maxLength: 6
        department:
          type: string
          nullable: true
          description: Department of the field of study.
          example: KGE
          maxLength: 6
        code:
          type: string
          nullable: false
          description: Code of the field of study.
          example: B0532A330036
          maxLength: 15

    ProblemDetail:
      type: object
      title: Problem Detail
      description: A generic error, as defined by RFC 7807. It can be extended with additional properties.
      additionalProperties: true
      nullable: false
      required:
        - type
        - title
        - status
        - detail
        - instance
      properties:
        type:
          type: string
          format: uri
          nullable: false
          description: A URI reference that identifies the problem type.
          example: http://localhost:8080/student-not-found
          pattern: ^((about:blank)|(https?://[^\s]+))$
          maxLength: 1000
        title:
          type: string
          nullable: false
          description: A short, human-readable summary of the problem type.
          example: Student Not Found
          pattern: ^[A-Za-z0-9\s\-.,!?:;'"]+$
          maxLength: 255
        status:
          type: integer
          format: int32
          nullable: false
          description: The HTTP status code.
          example: 404
        detail:
          type: string
          nullable: false
          description: A human-readable explanation specific to this occurrence of the problem.
          example: 'Student with ID: K24B4302P not found'
          pattern: ^[A-Za-z0-9\s\-.,!?:;'"]+$
          maxLength: 1000
        instance:
          type: string
          nullable: false
          description: A URI reference that identifies the specific occurrence of the problem.
          example: /students/K24B4302P
          pattern: ^(/[^\s]*)+$
          maxLength: 1000

  responses:

    400BadRequest:
      description: Bad request.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: http://localhost:8080/api/v1/bad-request
            title: Bad Request
            status: 400
            detail: Invalid student ID
            instance: /api/v1/students/-10

    401Unauthorized:
      description: Access token is missing or invalid.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: http://localhost:8080/api/v1/unauthorized
            title: Unauthorized
            status: 401
            detail: Access token is missing or invalid
            instance: /api/v1/students/K24B4302P

    403Forbidden:
      description: You do not have permission to access this resource.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: http://localhost:8080/api/v1/forbidden
            title: Forbidden
            status: 403
            detail: You do not have permission to access this resource
            instance: /api/v1/students/K24B4302P

    404NotFound:
      description: The specified resource was not found.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: http://localhost:8080/api/v1/student-not-found
            title: Student Not Found
            status: 404
            detail: 'Student with ID: 221264 not found'
            instance: /api/v1/students/K24B4302P

    500InternalServerError:
      description: Internal server error.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: http://localhost:8080/api/v1/internal-server-error
            title: Internal server error
            status: 500
            detail: An unexpected error occurred
            instance: /api/v1/students/K24B4302P

    503ServiceUnavailable:
      description: The service is currently unavailable.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: http://localhost:8080/api/v1/service-unavailable
            title: Service Unavailable
            status: 503
            detail: Service is currently unavailable. Please try again later.
            instance: /api/v1/students/K24B4302P

    Default:
      description: Unexpected error.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
