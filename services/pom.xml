<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.5</version>
        <relativePath /> <!-- lookup parent from a repository -->
    </parent>

    <groupId>com.stag</groupId>
    <artifactId>services</artifactId>
    <version>0.0.1</version>
    <packaging>pom</packaging>
    <name>services</name>
    <description>Aggregator for microservices</description>

    <properties>
        <!-- Java -->
        <java.version>24</java.version>

        <!-- Docker -->
        <!-- Default username for local builds; override in CI with -Ddocker.username=... -->
        <docker.username>jakubpavlicek</docker.username>
        <!-- Empty by default; override in CI with -Ddocker.password=... -->
        <docker.password></docker.password>

        <!-- SonarQube -->
        <sonar.organization>jakubpavlicek</sonar.organization>

        <!-- Maven -->
        <maven-enforcer.version>3.6.1</maven-enforcer.version>
        <maven-compiler.version>3.14.0</maven-compiler.version>

        <!-- Spring -->
        <spring-cloud.version>2025.0.0</spring-cloud.version>
        <springdoc.version>2.8.11</springdoc.version>
        <oracle.jdbc.version>23.9.0.25.07</oracle.jdbc.version>

        <!-- gRPC -->
        <grpc.version>1.75.0</grpc.version>
        <protobuf-java.version>4.32.1</protobuf-java.version>
        <grpc-starter.version>3.1.0.RELEASE</grpc-starter.version>
        <protovalidate.version>1.0.0</protovalidate.version>
        <protobuf-maven-plugin.version>3.9.1</protobuf-maven-plugin.version>

        <!-- Hibernate Search -->
        <hibernate-search.version>7.1.2.Final</hibernate-search.version>

        <!-- Hibernate ORM Processor for JPA Metamodel generation -->
        <hibernate-processor.version>7.1.0.Final</hibernate-processor.version>

        <!-- Tools -->
        <mapstruct.version>1.6.3</mapstruct.version>
        <mapstruct-protobuf-spi.version>1.52.0</mapstruct-protobuf-spi.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
        <openapi-generator.version>7.15.0</openapi-generator.version>

        <!-- Cloud Native Buildpacks -->
        <image.builder.version>0.0.62</image.builder.version>
        <buildpack-java.version>18.13.0</buildpack-java.version>
        <buildpack-health-checker.version>2.11.0</buildpack-health-checker.version>
    </properties>

    <modules>
        <!-- Shared modules -->
        <module>shared/grpc-common</module>

        <!-- Infrastructure services -->
        <module>api-gateway</module>
        <module>config-server</module>
        <module>discovery-server</module>

        <!-- Business services -->
        <module>student-service</module>
        <module>study-plan-service</module>
        <module>subject-service</module>
        <module>codelist-service</module>
        <module>user-service</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- Spring Cloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- gRPC -->
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-bom</artifactId>
                <version>${grpc.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>net.devh</groupId>
                <artifactId>grpc-spring-boot-starter</artifactId>
                <version>${grpc-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf-java.version}</version>
            </dependency>
            <dependency>
                <groupId>build.buf</groupId>
                <artifactId>protovalidate</artifactId>
                <version>${protovalidate.version}</version>
            </dependency>
            <dependency>
                <groupId>com.stag</groupId>
                <artifactId>grpc-common</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- Hibernate Search -->
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-mapper-orm</artifactId>
                <version>${hibernate-search.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.search</groupId>
                <artifactId>hibernate-search-backend-elasticsearch</artifactId>
                <version>${hibernate-search.version}</version>
            </dependency>

            <!-- Hibernate ORM Processor for JPA Metamodel generation -->
            <dependency>
                <groupId>org.hibernate.orm</groupId>
                <artifactId>hibernate-processor</artifactId>
                <version>${hibernate-processor.version}</version>
            </dependency>

            <!-- OpenAPI -->
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webflux-api</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>

            <!-- Database -->
            <dependency>
                <groupId>com.oracle.database.jdbc</groupId>
                <artifactId>ojdbc11</artifactId>
                <version>${oracle.jdbc.version}</version>
            </dependency>
            <dependency>
                <groupId>com.oracle.database.nls</groupId>
                <artifactId>orai18n</artifactId>
                <version>${oracle.jdbc.version}</version>
            </dependency>

            <!-- Tools -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!-- Build safety: enforce Maven & Java versions -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer.version}</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <fail>true</fail>
                            <rules>
                                <requireMavenVersion>
                                    <!-- Require Maven 3.9.11 or newer -->
                                    <version>[3.9.11,)</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <!-- Require Java 24 or newer -->
                                    <version>[24,)</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!-- Spring Boot Plugin -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <excludes>
                            <exclude>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                            </exclude>
                        </excludes>
                        <layers>
                            <enabled>true</enabled>
                        </layers>
                        <image>
                            <builder>paketobuildpacks/builder-noble-java-tiny:${image.builder.version}</builder>
                            <buildpacks>
                                <buildpack>paketobuildpacks/java:${buildpack-java.version}</buildpack>
                                <buildpack>paketobuildpacks/health-checker:${buildpack-health-checker.version}</buildpack>
                            </buildpacks>
                            <env>
                                <BP_JVM_VERSION>${java.version}</BP_JVM_VERSION>
                                <BP_HEALTH_CHECKER_ENABLED>true</BP_HEALTH_CHECKER_ENABLED>
                                <BPL_JAVA_NMT_ENABLED>false</BPL_JAVA_NMT_ENABLED>
                                <JAVA_TOOL_OPTIONS>-Duser.timezone=Europe/Prague</JAVA_TOOL_OPTIONS>
                            </env>
                            <name>docker.io/${docker.username}/${project.artifactId}:${project.version}</name>
                        </image>
                        <docker>
                            <publishRegistry>
                                <username>${docker.username}</username>
                                <password>${docker.password}</password>
                            </publishRegistry>
                        </docker>
                    </configuration>
                </plugin>

                <!-- Compiler Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler.version}</version>
                    <configuration>
                        <release>${java.version}</release>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.hibernate.orm</groupId>
                                <artifactId>hibernate-processor</artifactId>
                                <version>${hibernate-processor.version}</version>
                            </path>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>no.entur.mapstruct.spi</groupId>
                                <artifactId>protobuf-spi-impl</artifactId>
                                <version>${mapstruct-protobuf-spi.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok-mapstruct-binding</artifactId>
                                <version>${lombok-mapstruct-binding.version}</version>
                            </path>
                        </annotationProcessorPaths>
                        <compilerArgs>
                            <arg>-Amapstruct.suppressGeneratorTimestamp=true</arg>
                            <arg>-Amapstruct.suppressGeneratorVersionInfoComment=true</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>

                <!-- OpenAPI Generator Plugin -->
                <plugin>
                    <groupId>org.openapitools</groupId>
                    <artifactId>openapi-generator-maven-plugin</artifactId>
                    <version>${openapi-generator.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                            <configuration>
                                <inputSpec>${project.basedir}/src/main/resources/static/openapi.yaml</inputSpec>
                                <generatorName>spring</generatorName>
                                <addCompileSourceRoot>true</addCompileSourceRoot>
                                <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
                                <configOptions>
                                    <sourceFolder>src/gen/java</sourceFolder>
                                    <useSpringBoot3>true</useSpringBoot3>
                                    <interfaceOnly>true</interfaceOnly>
                                    <generateBuilders>true</generateBuilders>
                                    <openApiNullable>false</openApiNullable>
                                    <hideGenerationTimestamp>true</hideGenerationTimestamp>
                                </configOptions>
                                <typeMappings>
                                    <typeMapping>OffsetDateTime=java.time.LocalDateTime</typeMapping>
                                </typeMappings>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- gRPC Protobuf Plugin -->
                <plugin>
                    <groupId>io.github.ascopes</groupId>
                    <artifactId>protobuf-maven-plugin</artifactId>
                    <version>${protobuf-maven-plugin.version}</version>
                    <configuration>
                        <protocVersion>${protobuf-java.version}</protocVersion>
                        <sourceDirectories>
                            <sourceDirectory>${maven.multiModuleProjectDirectory}/proto</sourceDirectory>
                        </sourceDirectories>
                        <binaryMavenPlugins>
                            <binaryMavenPlugin>
                                <groupId>io.grpc</groupId>
                                <artifactId>protoc-gen-grpc-java</artifactId>
                                <version>${grpc.version}</version>
                                <options>@generated=omit</options>
                            </binaryMavenPlugin>
                        </binaryMavenPlugins>
                    </configuration>
                    <executions>
                        <execution>
                            <id>generate</id>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
