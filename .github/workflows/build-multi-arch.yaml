name: Build and Push Multi-Arch Images

on:
  push:

env:
  # Use a single version tag for both images to keep them in sync
  IMAGE_TAG: '0.0.1'
  REGISTRY: docker.io
  BACKEND_IMAGE: jakubpavlicek/api-gateway
  FRONTEND_IMAGE: jakubpavlicek/react-client

jobs:
  build-and-push:
    # We use a matrix to run the build steps for each architecture
    strategy:
      matrix:
        arch: [amd64, arm64]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
        with:
          # Create a builder that can handle multi-platform builds
          driver: docker-container
          platforms: linux/amd64,linux/arm64

      - name: Docker Login
        uses: docker/login-action@v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # --- Backend: Spring Boot ---
      - name: Setup JDK 25
        uses: actions/setup-java@v5.0.0
        with:
          distribution: liberica
          java-version: 25
          cache: maven

      - name: Build and Push Spring Boot Docker Images
        working-directory: ./services/api-gateway
        run: |
          mvn -B -DskipTests spring-boot:build-image \
            -Dspring-boot.build-image.publish=true \
            -Dspring-boot.build-image.imageName=${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE }}:${{ env.IMAGE_TAG }}-${{ matrix.arch }}
            -Ddocker.username=${{ secrets.DOCKERHUB_USERNAME }} \
            -Ddocker.password=${{ secrets.DOCKERHUB_TOKEN }}

      # --- Frontend: React with Pack ---
      - name: Setup Node.js Environment
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 24.9.0
          cache: npm
          cache-dependency-path: client/package-lock.json

      - name: Setup Buildpacks Tools
        uses: buildpacks/github-actions/setup-tools@v5.1.0

      - name: Setup Buildpacks Pack
        uses: buildpacks/github-actions/setup-pack@v5.1.0

      - name: Build and Push Frontend Image (${{ matrix.arch }})
        working-directory: ./client
        run: |
          pack build ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE }}:${{ env.IMAGE_TAG }}-${{ matrix.arch }} \
            --builder heroku/builder:22 \
            --buildpack heroku/nodejs \
            --env NODE_ENV=dev \
            --publish

  # This job runs AFTER the matrix job is complete for all architectures
  create-manifest:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Docker Login
        uses: docker/login-action@v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and Push Backend Manifest
        run: |
          # This is the magic command that combines the images.
          docker buildx imagetools create \
            -t ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE }}:${{ env.IMAGE_TAG }} \
            ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE }}:${{ env.IMAGE_TAG }}-amd64 \
            ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE }}:${{ env.IMAGE_TAG }}-arm64

      - name: Create and Push Frontend Manifest
        run: |
          docker buildx imagetools create \
            -t ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE }}:${{ env.IMAGE_TAG }} \
            ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE }}:${{ env.IMAGE_TAG }}-amd64 \
            ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE }}:${{ env.IMAGE_TAG }}-arm64