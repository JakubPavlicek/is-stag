receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
  prometheus/collector:
    config:
      scrape_configs:
        - job_name: "opentelemetry-collector"
          scrape_interval: 10s
          static_configs:
            - targets: ["127.0.0.1:8888"]

processors:
  batch:
  # see https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/1060
  tail_sampling:
    policies: [
      {
        name: filter_url_path,
        type: string_attribute,
        string_attribute: {
          key: url.path,
          values: [ /actuator.*, /eureka.*, /swagger-ui.*, /v3/api-docs.* ],
          enabled_regex_matching: true,
          invert_match: true
        }
      }
    ]

exporters:
  otlphttp/traces:
    endpoint: http://tempo:4318
    tls:
      insecure: true
  otlphttp/metrics:
    endpoint: http://prometheus:9090/api/v1/otlp
    tls:
      insecure: true
  otlphttp/logs:
    endpoint: http://loki:3100/otlp
    tls:
      insecure: true
  debug/metrics:
    verbosity: detailed
  debug/traces:
    verbosity: detailed
  debug/logs:
    verbosity: detailed

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
    path: "/ready"

service:
  extensions: [health_check]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch, tail_sampling]
      exporters: [otlphttp/traces]
    metrics:
      receivers: [otlp, prometheus/collector]
      processors: [batch]
      exporters: [otlphttp/metrics]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlphttp/logs]